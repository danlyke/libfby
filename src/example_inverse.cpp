// Example of using the GeographicLib::Geodesic class
#include <iostream>
#include <exception>
#include <GeographicLib/Geodesic.hpp>
#include <GeographicLib/Constants.hpp>
#include <gdal/ogr_api.h>
#include <gdal/ogr_geometry.h>
#include <float.h>
using namespace std;
using namespace GeographicLib;


struct {
    double lat;
    double lon;
} trackpoints[] =
{
#if 1
    { 38.419503, -122.750995 },
    { 38.419556, -122.751196 },
    { 38.419548, -122.751412 },
    { 38.419543, -122.751748 },
    { 38.41953, -122.751958 },
    { 38.419498, -122.752184 },
    { 38.419494, -122.752407 },
    { 38.419493, -122.752568 },
    { 38.419447, -122.752938 },
    { 38.419199, -122.75297 },
    { 38.418957, -122.753014 },
    { 38.418779, -122.753178 },
    { 38.418504, -122.753189 },
    { 38.418298, -122.75325 },
    { 38.41808, -122.753331 },
    { 38.417929, -122.753421 },
    { 38.417728, -122.753499 },
    { 38.417595, -122.753594 },
    { 38.417301, -122.753747 },
    { 38.417145, -122.753772 },
    { 38.416982, -122.75385 },
    { 38.416776, -122.753881 },
    { 38.416549, -122.753884 },
    { 38.416427, -122.75388 },
    { 38.416257, -122.753887 },
    { 38.416074, -122.753863 },
    { 38.415918, -122.753659 },
    { 38.415894, -122.753503 },
    { 38.4159, -122.753291 },
    { 38.415913, -122.752973 },
    { 38.415927, -122.752757 },
    { 38.415952, -122.752414 },
    { 38.415937, -122.7522 },
    { 38.41593, -122.752075 },
    { 38.415947, -122.751874 },
    { 38.415964, -122.75164 },
    { 38.416003, -122.751343 },
    { 38.416063, -122.751123 },
    { 38.416278, -122.750898 },
    { 38.416373, -122.750679 },
    { 38.416379, -122.750428 },
    { 38.416403, -122.750124 },
    { 38.416431, -122.749923 },
    { 38.416406, -122.749648 },
    { 38.416273, -122.749538 },
    { 38.416197, -122.749322 },
    { 38.416199, -122.749084 },
    { 38.416186, -122.748887 },
    { 38.416217, -122.748704 },
    { 38.41624, -122.748473 },
    { 38.416221, -122.748243 },
    { 38.416246, -122.748073 },
    { 38.416258, -122.747968 },
    { 38.416267, -122.747688 },
    { 38.416322, -122.747422 },
    { 38.416387, -122.747198 },
    { 38.416367, -122.746997 },
    { 38.416339, -122.746781 },
    { 38.416377, -122.746587 },
    { 38.416363, -122.746293 },
    { 38.416378, -122.746009 },
    { 38.416395, -122.745861 },
    { 38.416412, -122.745651 },
    { 38.416438, -122.74531 },
    { 38.416435, -122.744929 },
    { 38.416501, -122.744679 },
    { 38.416762, -122.744623 },
    { 38.41692, -122.744769 },
    { 38.417129, -122.744935 },
    { 38.417402, -122.744995 },
    { 38.417575, -122.745014 },
    { 38.417782, -122.744819 },
    { 38.41787, -122.744581 },
    { 38.417896, -122.744414 },
    { 38.417927, -122.744168 },
    { 38.417944, -122.743946 },
    { 38.417954, -122.743603 },
    { 38.41797, -122.74336 },
    { 38.417972, -122.743165 },
    { 38.417987, -122.742872 },
    { 38.418009, -122.742585 },
    { 38.418017, -122.742473 },
    { 38.418035, -122.742316 },
    { 38.418065, -122.742038 },
    { 38.418092, -122.741766 },
    { 38.418107, -122.741607 },
    { 38.418114, -122.7415 },
    { 38.41812, -122.741359 },
    { 38.418134, -122.741147 },
    { 38.418147, -122.740965 },
    { 38.418164, -122.74069 },
    { 38.418172, -122.740534 },
    { 38.418182, -122.740412 },
    { 38.418384, -122.740378 },
    { 38.418553, -122.740397 },
    { 38.418815, -122.74042 },
    { 38.418996, -122.74044 },
    { 38.41924, -122.740478 },
    { 38.419394, -122.740509 },
    { 38.419619, -122.740501 },
    { 38.419832, -122.740555 },
    { 38.419815, -122.740792 },
    { 38.419801, -122.741111 },
    { 38.41979, -122.74132 },
    { 38.419788, -122.741475 },
    { 38.419782, -122.741588 },
    { 38.419779, -122.741733 },
    { 38.419749, -122.742063 },
    { 38.419714, -122.742395 },
    { 38.419698, -122.742638 },
    { 38.419749, -122.742905 },
    { 38.419805, -122.743082 },
    { 38.419886, -122.743275 },
    { 38.419985, -122.743584 },
    { 38.419975, -122.743807 },
    { 38.419956, -122.744053 },
    { 38.419937, -122.744348 },
    { 38.419892, -122.744513 },
    { 38.419762, -122.744742 },
    { 38.419629, -122.744937 },
    { 38.419542, -122.745164 },
    { 38.4195, -122.745453 },
    { 38.419467, -122.74581 },
    { 38.419443, -122.746181 },
    { 38.419423, -122.746413 },
    { 38.419394, -122.746645 },
    { 38.419361, -122.746928 },
    { 38.419339, -122.747157 },
    { 38.419256, -122.74745 },
    { 38.419411, -122.747619 },
    { 38.419631, -122.747551 },
    { 38.419853, -122.747595 },
    { 38.420079, -122.747612 },
    { 38.420168, -122.747625 },
    { 38.420422, -122.747645 },
    { 38.420637, -122.74767 },
    { 38.420853, -122.747708 },
    { 38.421025, -122.747734 },
    { 38.421198, -122.747761 },
    { 38.421441, -122.747786 },
    { 38.421641, -122.747826 },
    { 38.421845, -122.747844 },
    { 38.42198, -122.747866 },
    { 38.422123, -122.74788 },
    { 38.422354, -122.747901 },
    { 38.422568, -122.747918 },
    { 38.422667, -122.74793 },
    { 38.422784, -122.747947 },
    { 38.423044, -122.747983 },
    { 38.423287, -122.748014 },
    { 38.423481, -122.74804 },
    { 38.423667, -122.748067 },
    { 38.423838, -122.748109 },
    { 38.424003, -122.748135 },
    { 38.42409, -122.748149 },
    { 38.424274, -122.748172 },
    { 38.424414, -122.748187 },
    { 38.424535, -122.748198 },
    { 38.424677, -122.748208 },
    { 38.425012, -122.748249 },
    { 38.425193, -122.748274 },
    { 38.425443, -122.748305 },
    { 38.425674, -122.748327 },
    { 38.425804, -122.748384 },
    { 38.425995, -122.748462 },
    { 38.426124, -122.748565 },
    { 38.426107, -122.749003 },
    { 38.426102, -122.749221 },
    { 38.426074, -122.749607 },
    { 38.426059, -122.749834 },
    { 38.426032, -122.749975 },
    { 38.426032, -122.750376 },
    { 38.426013, -122.750646 },
    { 38.425998, -122.750907 },
    { 38.42595, -122.751167 },
    { 38.425952, -122.751366 },
    { 38.425915, -122.751606 },
    { 38.425919, -122.751772 },
    { 38.425892, -122.752121 },
    { 38.425884, -122.752418 },
    { 38.425893, -122.752618 },
    { 38.425886, -122.752926 },
    { 38.425867, -122.753121 },
    { 38.42569, -122.753178 },
    { 38.425531, -122.75318 },
    { 38.425382, -122.753143 },
    { 38.425128, -122.753099 },
    { 38.425103, -122.75281 },
    { 38.425111, -122.752614 },
    { 38.425139, -122.752355 },
    { 38.425074, -122.752061 },
    { 38.424972, -122.75182 },
    { 38.424827, -122.75163 },
    { 38.424672, -122.751522 },
    { 38.424554, -122.751405 },
    { 38.424557, -122.751044 },
    { 38.424589, -122.750828 },
    { 38.424621, -122.750445 },
    { 38.424631, -122.750246 },
    { 38.424605, -122.750005 },
    { 38.424446, -122.749983 },
    { 38.424235, -122.750015 },
    { 38.424112, -122.749932 },
    { 38.423914, -122.749854 },
    { 38.423645, -122.749909 },
    { 38.423464, -122.749843 },
    { 38.423309, -122.749813 },
    { 38.423114, -122.749806 },
    { 38.422931, -122.749713 },
    { 38.422693, -122.749519 },
    { 38.422555, -122.74941 },
    { 38.422407, -122.749345 },
    { 38.422295, -122.749312 },
    { 38.422116, -122.749297 },
    { 38.421878, -122.749243 },
    { 38.421715, -122.749228 },
    { 38.421471, -122.749205 },
    { 38.421267, -122.749143 },
    { 38.421065, -122.749102 },
    { 38.420811, -122.749117 },
    { 38.420628, -122.749097 },
    { 38.420496, -122.749114 },
    { 38.420292, -122.749167 },
    { 38.420173, -122.74925 },
    { 38.420034, -122.749418 },
    { 38.41989, -122.749622 },
    { 38.419812, -122.749881 },
    { 38.419742, -122.750133 },
    { 38.419673, -122.750452 },
    { 38.419614, -122.750751 },
    { 38.419609, -122.75103 },
    { 38.419609, -122.75103 },
    { 38.419609, -122.75103 }
#endif
};

// #define LIBGEOGRAPHIC 1
int main() {
    try {
        //Geodesic geod(Constants::WGS84_a(), Constants::WGS84_f());
        const Geodesic& geod = Geodesic::WGS84();
//        {
//            // Sample direct calculation, travelling about NE from JFK
//            double lat1 = 40.6, lon1 = -73.8, s12 = 5.5e6, azi1 = 51;
//            double lat2, lon2;
//            geod.Direct(lat1, lon1, azi1, s12, lat2, lon2);
//            cout << lat2 << " " << lon2 << "\n";
//        }
        {
            double lat1 = FLT_MAX, lon1 = FLT_MAX;
            double distance = 0;
            for (size_t i = 0; i < sizeof(trackpoints) / sizeof(trackpoints[0]); ++i)
            {
                double lat2 = trackpoints[i].lat;
                double lon2 = trackpoints[i].lon;

                if (i)
                {
                    cout << "Transforming "
                         << lat1 << " " << lon1 << " "
                         << lat2 << " " << lon2 << endl;
                    double s12(0.0);
                    geod.Inverse(lat1, lon1, lat2, lon2, s12);
                    cout << "dD " << s12 << endl;
                    distance += s12;
                }
                lat1 = lat2;
                lon1 = lon2;
            }
            cout << "Distance " << distance << endl;
        }
//        {
//            double
//                lat1 = 40.6, lon1 = -73.8, // JFK Airport
//                lat2 = 51.6, lon2 = -0.5;  // LHR Airport
//            double s12;
//            geod.Inverse(lat1, lon1, lat2, lon2, s12);
//            cout << s12 << "\n";
//        }
    }
    catch (const exception& e) {
        cerr << "Caught exception: " << e.what() << "\n";
        return 1;
    }
    return 0;
}
